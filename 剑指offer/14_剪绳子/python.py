"""
#### 题目描述

把一根绳子剪成多段，并且使得每段的长度乘积最大。
n = 2
return 1 (2 = 1 + 1)

n = 10
return 36 (10 = 3 + 3 + 4)
解题思路
贪心
尽可能多剪长度为 3 的绳子，并且不允许有长度为 1 的绳子出现。如果出现了，就从已经切好长度为 3 的绳子中拿出一段与长度为 1 的绳子重新组合，把它们切成两段长度为 2 的绳子。

证明：当 n >= 5 时，3(n - 3) - n = 2n - 9 > 0，且 2(n - 2) - n = n - 4 > 0。因此在 n >= 5 的情况下，将绳子剪成一段为 2 或者 3，得到的乘积会更大。又因为 3(n - 3) - 2(n - 2) = n - 5 >= 0，所以剪成一段长度为 3 比长度为 2 得到的乘积更大。
"""

def jsz(sz):
    if sz == 1 or sz == 2:
        return 1
    if sz == 3:
        return 2
    count = sz//3
    sy = sz%3
    zj = 3
    for i in range(count-1):
        zj = zj * 3
    if sy == 1:
        zj = zj // 3 * 4
    elif sy == 2:
        zj = zj * 2
    return zj

if __name__ == '__main__':
    print(jsz(10))